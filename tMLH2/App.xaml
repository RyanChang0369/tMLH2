<Application x:Class="tMLH2.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:tMLH2"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <Style TargetType="RadioButton">
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>
        <Style TargetType="CheckBox">
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>
        <Style x:Key="DefaultTabControl" TargetType="TabControl">
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="Margin" Value="10"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
        </Style>
        <Style TargetType="TabItem">
            <Setter Property="FontSize" Value="24"/>
        </Style>
        <Style x:Key="TabControlStackPanel" TargetType="StackPanel">
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Background" Value="#FFE5E5E5"/>
        </Style>

        <Style x:Key="MainImage" TargetType="Image">
            <Setter Property="Margin" Value="10"/>
            <Setter Property="RenderOptions.BitmapScalingMode" Value="NearestNeighbor"/>
        </Style>
        
        <!--Generic FrameworkElement Styles-->
        <Style x:Key="default" TargetType="{x:Type FrameworkElement}">
            <Setter Property="Margin" Value="10"/>
        </Style>
        <Style x:Key="center" TargetType="{x:Type FrameworkElement}" BasedOn="{StaticResource default}">
            <Setter Property="Margin" Value="10"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
        </Style>

        <!--More Control Styles-->
        <Style x:Key="title" TargetType="{x:Type Control}" BasedOn="{StaticResource default}">
            <Setter Property="FontSize" Value="76"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
        </Style>
        <Style x:Key="h1" TargetType="{x:Type Control}" BasedOn="{StaticResource title}">
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
        </Style>
        <Style x:Key="h2" TargetType="{x:Type Control}" BasedOn="{StaticResource h1}">
            <Setter Property="FontSize" Value="18"/>
        </Style>
        <Style x:Key="paragraph" TargetType="{x:Type Control}" BasedOn="{StaticResource h2}">
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="Margin" Value="10,0,10,0"/>
        </Style>

        <!--Paragraph Styles-->
        <Style TargetType="Paragraph">
            <Setter Property="FontSize" Value="16"/>
        </Style>
        <Style x:Key="titleP" TargetType="Paragraph">
            <Setter Property="FontSize" Value="48"/>
        </Style>
        <Style x:Key="h1P" TargetType="Paragraph">
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="TextDecorations" Value="Underline"/>
        </Style>
        <Style x:Key="h2P" TargetType="Paragraph">
            <Setter Property="FontSize" Value="20"/>
        </Style>
        
        <!--Button Styles-->
        <Style x:Key="Button" TargetType="Button">
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="Margin" Value="10"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="MinWidth" Value="100"/>
            <Setter Property="MinHeight" Value="40"/>
        </Style>

        <!--TextBox and TextBlock Styles-->
        <Style TargetType="TextBox" x:Key="defaultTextBox">
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="Margin" Value="10, 0"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Width" Value="400"/>
        </Style>

        <Style TargetType="TextBlock" x:Key="defaultTextBlock">
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="Background" Value="WhiteSmoke"/>
            <Setter Property="MinHeight" Value="100"/>
            <Setter Property="Margin" Value="10, 0"/>
        </Style>
        <Style x:Key="introText" TargetType="TextBlock" BasedOn="{StaticResource defaultTextBlock}">
            <Setter Property="FontSize" Value="36"/>
            <Setter Property="FontFamily" Value="Monotype Corsiva"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
        </Style>

        <Style TargetType="TextBox" BasedOn="{StaticResource defaultTextBox}"/>

        <Style TargetType="TextBox" x:Key="paragraphTextBox" BasedOn="{StaticResource defaultTextBox}">
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="MinLines" Value="4"/>
            <Setter Property="SpellCheck.IsEnabled" Value="True"/>
            <Setter Property="AcceptsReturn" Value="True"/>
            <Setter Property="MinHeight" Value="100"/>
        </Style>

        <!--Validation Templates and Styles-->
        <ControlTemplate x:Key="validationTemplate">
            <DockPanel>
                <TextBlock Foreground="DarkRed" Style="{StaticResource defaultTextBlock}" MinHeight="0"
                           Text="{Binding [0].ErrorContent}" DockPanel.Dock="Right" Background="Transparent"/>
                <AdornedElementPlaceholder/>
            </DockPanel>
        </ControlTemplate>

        <Style x:Key="validationError" TargetType="TextBox" BasedOn="{StaticResource defaultTextBox}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                        Path=(Validation.Errors)/ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Application.Resources>
</Application>
